var Tools = {  ioLogin: function (phone, socketId) {    console.log(phone)    let p = new Promise((resolve, reject) => {      //如果未登录，登录      DB.sqlDB(`insert into socketer(phone,socketId) values('${phone}','${socketId}')`).then((data) => {        if (data.warningCount == 0) {          resolve(true);        } else {          resolve(false);        }      });    });    return p;  },  ioSignOut: function (socketId) {    //如果未登录，登录    DB.sqlDB(`delete from user where socketId=${socketId}`).then(function (data) {      console.log(data)      if (data.warningCount == 0) {        resolve(true);      } else {        resolve(false);      }    });  },  ioUpdateLogin: function (chatId, socketId) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB(`update socketer set socketId='${socketId}' where chatId='${chatId}'`).then(function (data) {        if (data.warningCount == 0) {          resolve(true);        } else {          resolve(false);        }      });    });    return p;  },  ioHasLogin: function (socketId) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB(`select * from socketer where socketId=${socketId}`).then(function (userList) {        if (userList.length == 1) {          resolve(true);        } else {          resolve(false);        }      });    });    return p;  },  getSocketId: function (chatId) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB('select * from socketer where chatId=\'' + chatId + '\'').then(function (userList) {        console.log(userList)        if (userList.length == 1) {          resolve(userList[0].socketId);        } else {          resolve(false);        }      });    });    return p;  },  //清除未读消息数量  ioResetUnreadMsgCount(chatter, cb) {    var p = new Promise(function (resolve, reject) {      DB.sqlDB(`update chatList set unreadMsgCount = 0 where chatter='${chatter}'`).then(function (status) {        console.log(status)        if (status) {          resolve(true)        } else {          resolve(false)        }      });    });    return p;  },  //获取历史记录  ioGetMsgHistory(data){    var p = new Promise(function (resolve, reject) {      console.log(data)      let sql=`SELECT * FROM msgHistory WHERE (\`from\`='${data.phone}' AND \`to\`='${data.chatter}') or (\`from\`='${data.chatter}' AND \`to\`=${data.phone})`;      console.log(sql)      DB.sqlDB(sql).then(function (dataList) {        console.log(dataList)        if (dataList && dataList.length>0) {          resolve(dataList)        } else {          resolve(false)        }      });    });    return p;  }}module.exports = Tools;